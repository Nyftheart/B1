{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"numberOfMonsters"
			],
			[
				"MAX_",
				"MAX_WIDTH"
			],
			[
				"MAX",
				"MAX_HEIGHT"
			],
			[
				"men",
				"menuWindow"
			],
			[
				"me",
				"menuWindow"
			],
			[
				"n",
				"numberItems"
			],
			[
				"main",
				"mainMenu"
			],
			[
				"menu",
				"menuChoices"
			],
			[
				"po",
				"position"
			],
			[
				"rand",
				"randomRoom"
			],
			[
				"con",
				"connected"
			],
			[
				"ran",
				"randomDoor"
			],
			[
				"co",
				"connectDoors"
			],
			[
				"ra",
				"randomRoom"
			],
			[
				"number",
				"numberOfDoors"
			],
			[
				"l",
				"level"
			],
			[
				"le",
				"newLevel"
			],
			[
				"tota",
				"totalPrecip"
			],
			[
				"tot",
				"totalTemp"
			],
			[
				"g",
				"guelphCount"
			],
			[
				"gue",
				"guelphWeather"
			],
			[
				"p",
				"position"
			],
			[
				"temp",
				"tempX"
			],
			[
				"fro",
				"frontierCount"
			],
			[
				"fr",
				"frontierCount"
			],
			[
				"M",
				"MAX_WIDTH"
			],
			[
				"MA",
				"MAX_HEIGHT"
			],
			[
				"came",
				"cameFrom"
			],
			[
				"fron",
				"frontier"
			],
			[
				"to",
				"totalQueries"
			],
			[
				"y",
				"yTransformation"
			],
			[
				"des",
				"destroy"
			],
			[
				"tem",
				"tempObj"
			],
			[
				"obj",
				"obj"
			],
			[
				"an",
				"angle"
			],
			[
				"destr",
				"destroyImage"
			],
			[
				"fac",
				"factor"
			],
			[
				"add",
				"addObjectsToQuery"
			],
			[
				"dest",
				"destroyImage"
			],
			[
				"ne",
				"newImage"
			],
			[
				"OBJ",
				"OBJDIR"
			],
			[
				"re",
				"return"
			],
			[
				"te",
				"tempX"
			],
			[
				"mo",
				"moveY"
			],
			[
				"pixe",
				"pixels"
			],
			[
				"cor",
				"correctResults"
			],
			[
				"stri",
				"string1"
			],
			[
				"obje",
				"objectsCount"
			],
			[
				"objects",
				"objectsCount"
			],
			[
				"b",
				"bubbleSort"
			],
			[
				"object",
				"objectsCount"
			],
			[
				"s",
				"simularities"
			],
			[
				"fp",
				"fprintf	fprintf …"
			],
			[
				"fil",
				"fileName"
			],
			[
				"a",
				"argc"
			],
			[
				"vehi",
				"vehicles"
			],
			[
				"avg_",
				"avg_wrecked_new_cars"
			],
			[
				"v",
				"vehicleData"
			],
			[
				"ve",
				"vehicleDate"
			],
			[
				"old",
				"oldID"
			],
			[
				"O",
				"ORG_VAL"
			],
			[
				"qu",
				"queryString1"
			],
			[
				"q",
				"queryString1"
			],
			[
				"in",
				"include"
			],
			[
				"de",
				"determineDistance"
			],
			[
				"ma",
				"maxVehicles"
			],
			[
				"w",
				"winderResultsC"
			],
			[
				"year",
				"year1"
			],
			[
				"print",
				"printf	printf …"
			],
			[
				"lo",
				"local_records"
			],
			[
				"c",
				"collisions"
			],
			[
				"LEN",
				"LEN_HEADER"
			],
			[
				"LE",
				"LEN_LINE"
			],
			[
				"ima",
				"imaName"
			],
			[
				"close",
				"closeObj"
			],
			[
				"img",
				"imgB"
			],
			[
				"ar",
				"argv"
			],
			[
				"f",
				"fprintf	fprintf …"
			],
			[
				"getch",
				"getchar"
			],
			[
				"path",
				"pathIndex"
			],
			[
				"mv",
				"mvprintw"
			],
			[
				"temP",
				"tempPosition"
			],
			[
				"vis",
				"visitedIndex"
			],
			[
				"que",
				"queueCount"
			],
			[
				"queue",
				"queueIndex"
			],
			[
				"hist",
				"hist_3d_mid"
			],
			[
				"max",
				"maxDotProduct"
			],
			[
				"tv",
				"tverskySteps"
			],
			[
				"do",
				"double"
			],
			[
				"tve",
				"tverskyStats"
			],
			[
				"cu",
				"current"
			],
			[
				"cur",
				"currentTime"
			],
			[
				"pr",
				"previousTime"
			],
			[
				"bot",
				"bottomTime"
			],
			[
				"bo",
				"bottomSim"
			],
			[
				"mid",
				"middle"
			],
			[
				"botto",
				"bottomSim"
			],
			[
				"middl",
				"middleSim"
			],
			[
				"mi",
				"middleSim"
			],
			[
				"D",
				"DBL_EPSILON"
			],
			[
				"SI",
				"SIMPSONS_ALGO1"
			],
			[
				"ord",
				"dirs_order"
			],
			[
				"SIMPSON_A",
				"SIMPSONS_ALGO3"
			],
			[
				"gst",
				"gts_object_destroy"
			],
			[
				"free",
				"freeObjects"
			],
			[
				"d",
				"direction_index"
			],
			[
				"SIMPSONS_",
				"SIMPSONS_ALGO2"
			],
			[
				"test",
				"testDirection"
			],
			[
				"bott",
				"bottoms"
			],
			[
				"su",
				"sudoku"
			],
			[
				"pri",
				"printf	printf …"
			],
			[
				"rot",
				"rotatedVector"
			],
			[
				"SIM",
				"SIMPSONS"
			],
			[
				"size",
				"sizeof"
			],
			[
				"si",
				"sizeof"
			],
			[
				"app",
				"approximation"
			],
			[
				"mont",
				"monteCarloApproximation"
			],
			[
				"di",
				"display_slices"
			],
			[
				"n_",
				"n_dirs"
			],
			[
				"spe",
				"specularValue"
			],
			[
				"norma",
				"normal"
			],
			[
				"dor",
				"dotProduct"
			],
			[
				"ray",
				"rayDir"
			],
			[
				"spher",
				"sphereIndex"
			],
			[
				"len",
				"lengthOfVector"
			],
			[
				"dot",
				"dotProduct"
			],
			[
				"SCR",
				"SCREEN_HEIGHT"
			],
			[
				"sp",
				"sphereIndex"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.c",
			"settings":
			{
				"buffer_size": 1008,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 393.0,
		"selected_items":
		[
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 137.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/james/rogue/rogue/src/game.c",
		"/home/james/rogue/rogue/include/rogue.h",
		"/home/james/rogue/rogue/src/monster.c",
		"/home/james/rogue/rogue/src/main.c",
		"/home/james/rogue/rogue/src/level.c",
		"/home/james/rogue/rogue/src/player.c",
		"/home/james/rogue/rogue/src/rogue.sublime-project",
		"/home/james/rogue/rogue/src/windows/mainMenu.c",
		"/home/james/rogue/rogue/include/mainMenu.h",
		"/home/james/rogue/rogue/src/room.c",
		"/home/james/rogue/Tutorial 23 End/src/level.c",
		"/home/james/rogue/Tutorial 23 End/src/main.c",
		"/home/james/rogue/rogue/include/windows.h",
		"/home/james/rogue/rogue/src/windows/windows.c",
		"/home/james/Desktop/compilers/wadsworj_a1/README.md",
		"/home/james/Desktop/compilers/a0/README",
		"/home/james/Desktop/compilers/a0/test_suite/output/output_2",
		"/home/james/Desktop/compilers/a0/test_suite/files/test_file_2",
		"/home/james/Desktop/compilers/test/makefile",
		"/home/james/Desktop/compilers/test/scanner.h",
		"/home/james/Desktop/compilers/test/tokenType.h",
		"/home/james/Desktop/compilers/test/include/util.h",
		"/home/james/Desktop/compilers/test/util.c",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/2750/a4/a4test/makefile",
		"/home/james/Desktop/rogue/makefile",
		"/home/james/Desktop/sudoku/makefile",
		"/home/james/Desktop/compilers/test/lex.yy.c",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/3150/stack.c",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/3150/n4.out",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/3150/n3.out",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/3150/string_stack.c",
		"/home/james/Desktop/ncurses-5 (copy).9/Courses/3110/A1/readme.txt",
		"/home/james/rogue/rogue/src/screen.c",
		"/home/james/rogue/rogue/makefile",
		"/home/james/rogue/rogue/include/menuDisplay.h",
		"/home/james/rogue/rogue/src/windows/menuDisplay.c",
		"/home/james/rogue/rogue/src/windows/menuDisplay.h",
		"/home/james/rogue/rogue/src/windows/mainMenu.h",
		"/home/james/rogue/rogue/include/meuDisplay.h",
		"/home/james/rogue/rogue/src/windows/gameOver.c",
		"/home/james/rogue/rogue/include/gameOver.h",
		"/home/james/rogue/rogue/src/utils/menuDisplay.c",
		"/home/james/Desktop/rogue/src/utils/menuDisplay.c",
		"/home/james/rogue/rogue/out.txt",
		"/home/james/rogue/Tutorial 22 End/src/main.c",
		"/home/james/Desktop/rogue/src/main.c",
		"/home/james/Desktop/rogue/src/player.c",
		"/home/james/Desktop/rogue/src/monster.c",
		"/home/james/Desktop/rogue/src/states/gameState.c",
		"/home/james/Desktop/rogue/src/screen.c",
		"/home/james/Desktop/rogue/src/level.c",
		"/home/james/Desktop/rogue/include/rogue.h",
		"/home/james/Desktop/rogue/include/level.h",
		"/home/james/Desktop/rogue/include/state.h",
		"/home/james/Desktop/rogue/include/game.h",
		"/home/james/Desktop/rogue/include/gameState.h",
		"/home/james/Desktop/rogue/include/menuState.h",
		"/home/james/Desktop/rogue/src/states/menuState.c",
		"/home/james/Desktop/rogue/include/menuDisplay.h",
		"/home/james/Desktop/rogue/src/utils/startScreen.c",
		"/home/james/Desktop/rogue/menu.c",
		"/home/james/Desktop/rogue/src/utils/menu.c",
		"/home/james/Desktop/rogue/include/menu.h",
		"/home/james/rogue/rogue/src/utils/pathFinding.c",
		"/home/james/Desktop/rogue/menu2.c",
		"/home/james/Desktop/rogue/src/combat.c",
		"/home/james/Desktop/rogue (copy)/src/level.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/query.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/imageIO.c",
		"/home/james/Desktop/cis1500/data.txt",
		"/home/james/Desktop/cis1500/a4.c",
		"/home/james/Desktop/cis1500/dataA4.txt",
		"/home/james/Desktop/cis1500/test.txt",
		"/home/james/rogue/rogue/include/utils.h",
		"/home/james/rogue/rogue/map.txt",
		"/home/james/rogue/rogue (copy)/src/utils/pathfinding.c",
		"/home/james/rogue/rogue (copy)/src/room.c",
		"/home/james/rogue/rogue (copy)/include/rogue.h",
		"/home/james/rogue/rogue (copy)/src/utils/util.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary (backup Oct 30th)/STATS/src/stats.c",
		"/home/james/rogue/rogue (copy)/makefile",
		"/home/james/rogue/rogue (copy)/src/level.c",
		"/home/james/rogue/rogue (copy)/src/main.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/src/stats.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/mapQuery2.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/OUTPUT/results/results",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/makefile",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/src/runQueries.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/mapQuery1.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/include/imageIO.h",
		"/home/james/Desktop/2016F-URA/PHImapQuary/OUTPUT/original/queries",
		"/home/james/Desktop/2016F-URA/PHImapQuary/INPUT/genQueries/qmap_small_0.pgm",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/makefile_stats",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/makefile",
		"/home/james/Desktop/2016F-URA/PHImapQuary/OUTPUT/results/newResults",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/src/tests.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/include/util.h",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/src/query.c",
		"/home/james/rogue/rogue/grid",
		"/home/james/rogue/rogue2/src/pathFinding.c",
		"/home/james/rouge/rouge2/src/pathFinding.c",
		"/home/james/rouge/rouge2/include/pathFinding.h",
		"/home/james/rogue/rouge2/include/rogue.h",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/include/util.h",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/src/util.c",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/include/tests.h",
		"/home/james/Desktop/2016F-URA/PHImapQuary/STATS/readme.txt",
		"/home/james/Desktop/Courses/4900/fhv3d/src/Exp/exp.c",
		"/home/james/Desktop/Courses/4900/fhv3d/include/imageIO.h",
		"/home/james/Desktop/Courses/4900/fhv3d/src/fhv3d_individualDirections.c",
		"/home/james/Desktop/Courses/4900/fhv3d/src/fhv3d.c",
		"/home/james/Desktop/Courses/4900/fhv3d/include/utils.h",
		"/home/james/Desktop/Courses/4900/fhv3d/src/utils/gtsUtils.c",
		"/home/james/Desktop/Courses/4900/fhv3d/src/RVobjects/imageIO.c",
		"/home/james/Desktop/Courses/4900/fhv3d/src/RVobjects/RVobjects.c",
		"/home/james/Desktop/Courses/4900/fhv3d/src/midpoint.c",
		"/home/james/Desktop/Courses/4900/fhv3d/include/simpsons.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/midpoint.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/fhv3d_old.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/fhv3d.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/gtsTo2D.h",
		"/home/james/Desktop/Courses/4900/fhv3d/src/Exp/dirTruthComp.c",
		"/home/james/Desktop/Courses/4900/fhv3d/include/hist3DType.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/directions.h",
		"/home/james/Desktop/Courses/4900/fhv3d/src/simpsons.c",
		"/home/james/Desktop/Courses/4900/fhv3d/makefile",
		"/home/james/Desktop/Courses/4900/fhv3d/include/util.h",
		"/home/james/Desktop/Courses/4900/fhv3d/include/fileUtils.h"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/james/rogue/rogue/src",
			"/home/james/Desktop/compilers/test",
			"/home/james/Desktop/rogue/src",
			"/home/james/desktop/rogue/src",
			"/home/james/rogue/rogue/src",
			"/home/james/rogue/rogue (copy)/src",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/2016F-URA/PHImapQuary/STATS",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE/include",
			"/home/james/Desktop/2016F-URA/PHImapQuary/include",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/2016F-URA/PHImapQuary/STAT",
			"/home/james/Desktop/2016F-URA/PHImapQuary/STATS",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/Courses/4900/fhv3d/src",
			"/home/james/Desktop/Courses/4900/fhv3d/include",
			"/home/james/Desktop/Courses/4900/fhv3d/src",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/2016F-URA/PHImapQuary/STATS",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/Courses/4900/fhv3d/src",
			"/home/james/Desktop/2016F-URA/PHImapQuary/CODE",
			"/home/james/Desktop/rouge/rouge/src",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/PHImapQuary/CODE",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/PHImapQuary/CODE",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/directions/src",
			"/home/james/Desktop/4900/fhv3d/include",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/sudoku/src",
			"/home/james/Desktop/Rogue",
			"/home/james/Desktop/4900/fhv3d/src",
			"/home/james/Desktop/4900/fhv3d/",
			"/home/james/Desktop/4900/fhv3d/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"numberItems",
			"choices",
			"drawRooms",
			"drawRoom",
			"mvprintw",
			"saveLevelPositions",
			"placePlayer",
			"gameLoop",
			"tagStack",
			"ptr_value",
			"set_item_userptr",
			"handleInput",
			"move",
			"moveMonsters",
			"handleInput",
			"createLevel",
			"createLe",
			"handleInput",
			"p",
			"handleInput",
			"menu",
			"Hello",
			"Hello Wo",
			"numberOfRooms",
			"connectDoors",
			"getch",
			"Hello World",
			"MAX",
			"output_queries",
			"output",
			"RESULTS",
			"results",
			"fact",
			"SELECT",
			"SELECTION",
			"generateQueries",
			"writeOutputImage",
			"printf",
			"performOperationsOnObject",
			"factor",
			"centered",
			"scaling",
			"scaleImage",
			"transformObject",
			"center",
			"performOperationsOnObject",
			"tempImage",
			"SELECTION",
			"distance",
			"rotationCount",
			"count",
			"transformObject",
			"scaleImage",
			"generateQueries",
			"rotateImage",
			"centreObjectUnCentre",
			"transformObject",
			"factor",
			"valgrind",
			"getchar",
			"imagesOverlap",
			"combineImages",
			"getchar",
			"padding",
			"enlargeImage",
			"destroy",
			"generateQueries",
			"rotateImage",
			"v ",
			"moveY",
			"SELECTION",
			"\"objects",
			"objects",
			"get_plane",
			"fileUt",
			"epsilon",
			"coplanar_dirs",
			"struct hist_3d",
			"freeFiles",
			"get_polygon_rep",
			"get_intersects",
			"RVobjType.h",
			"degrees.h",
			"or_all",
			"free",
			"freeFile",
			"approximation",
			"sliceAt",
			"find_sub_intervals",
			"centreObjectUnCentre",
			"rotateImage",
			"input",
			"rotateImage",
			"centreObjectUnCentre",
			"rotateImage",
			"getchar",
			"determineDistance",
			"pixels",
			"output",
			"trying to open",
			"printf",
			"objects",
			"/queries",
			"queries",
			"objects",
			"objectsCount",
			"objects",
			"getchar",
			"runQueries",
			"    ",
			"free",
			"fp",
			"newResults",
			"printResult",
			"        stcat();",
			"printResult",
			"getchar",
			"OUTPUT",
			"INPUT/",
			"printf",
			"OUTPUT",
			"output",
			"INPUT",
			"fseek",
			"debug",
			"cannot",
			"can",
			"    pid_t pid=fork();\n    if (pid==0) { /* child process */\n        static char *argv[]={\"echo\",\"Foo is my name.\",NULL};\n        execv(\"/bin/echo\",argv);\n        exit(127); /* only if execv fails */\n    }\n    else { /* pid!=0; parent process */\n        waitpid(pid,0,0); /* wait for child to exit */\n    }"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"game",
			"  ",
			"	",
			",",
			"",
			"ffff",
			"0",
			"0000",
			"0",
			"aaaa",
			"centerOfSphere2",
			"centerOfSphere1",
			"radius",
			"sphereCenter[",
			"rayDir[",
			"rayDir",
			"ray",
			"pointOfView",
			"destination",
			"start->",
			"    ",
			"NUM_OF_PHILOSOPHERS"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1008,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 400.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "rogue.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
